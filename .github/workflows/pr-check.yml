name: PR Check

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tasks: ${{ steps.calculate-tasks.outputs.tasks }}
      workload: ${{ steps.store-tasks.outputs.workload }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - name: Check Bun Version
        run: bun --version

      - name: Install Dependencies
        id: install-deps
        run: |
          cd modules/bunrepo-cli;
          bun link;
          cd ../..;
          bun install;

      - name: Calculate tasks
        id: calculate-tasks
        run: |
          # tasks command sets github output variable 'tasks' on completion
          echo "Generating tasks"
          bunr tasks -a -t pullrequest

      - name: Store tasks
        id: store-tasks
        run: |
          echo "Storing tasks:"
          echo "${{ toJSON(steps.calculate-tasks.outputs.tasks) }}"
          echo "workload=${{ toJSON(steps.calculate-tasks.outputs.tasks) }}" >> "$GITHUB_OUTPUT"

  run-tasks:
    name: "${{ matrix.workload.name }}"
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workload: ${{ fromJSON(needs.setup.outputs.workload).include }}
      fail-fast: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        id: install-deps
        run: |
          cd modules/bunrepo-cli;
          bun link;
          cd ../..;
          bun install;

      - name: Run tasks
        shell: bash
        run: |
          echo 'Running tasks';
          touch workflow.json;
          echo '${{ toJSON(matrix.workload) }}' >> workload.json;

          echo $(jq -c -r tostring workload.json)
          FORMATTED_JSON=$(jq -c -r tostring workload.json)

          bunr run --workload "$FORMATTED_JSON";


